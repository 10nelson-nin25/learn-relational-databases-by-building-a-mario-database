{
  "version": "0.1.2",
  "summary": {
    "title": "Introduction",
    "description": "> Welcome to the Relational Database Lessons! You will be using PostgreSQL for this section. It's an extremely popular open source relational database management systems (RDBMS). My goal is to teach you everything I can about it and relatational databases."
  },
  "config": {
    "testRunner": {
      "command": "./node_modules/.bin/mocha",
      "args": {
        "tap": "--reporter=mocha-tap-reporter"
      },
      "setup": {
        "commands": [
          "npm install",
          "cd / && sudo chmod 777 home && cd home && sudo chmod 777 strove && cd strove && sudo chmod 777 project && cd project && sudo chmod 777 coderoad && cd coderoad && sudo chmod 777 test && cd test && sudo chmod 777 pg.log",
          "cd /etc/postgresql/12/main && sudo chmod 666 postgresql.conf && echo \"log_statement = 'all'\" >> postgresql.conf && echo \"log_min_error_statement = INFO\" >> postgresql.conf && echo \"log_min_messages = INFO\" >> postgresql.conf && echo \"logging_collector = on\" >> postgresql.conf && echo \"log_directory = '/home/strove/project/coderoad/test'\" >> postgresql.conf && echo \"log_filename = 'pg.log'\" >> postgresql.conf && echo \"log_connections = on\" >> postgresql.conf && echo \"log_line_prefix = ''\" >> postgresql.conf && sudo sed -i \"s/host    all             all             127.0.0.1\\/32            md5/host    all             all             127.0.0.1\\/32            trust/\" pg_hba.conf"
        ],
        "commits": [
          "02bab511521a06178f80e275b8eb93675ec4960e"
        ]
      },
      "directory": "coderoad"
    },
    "repo": {
      "uri": "https://github.com/moT01/sql-1",
      "branch": "v0.1.2"
    },
    "dependencies": [
      {
        "name": "node",
        "version": ">=10"
      }
    ]
  },
  "levels": [
    {
      "id": "L10",
      "steps": [
        {
          "id": "L10S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "041cdd2c4e4716452311bf74d9218365e0d22ace"
            ]
          },
          "solution": {
            "commits": [
              "128fd0f77383632758f59d47a2c8f4b231a32345"
            ]
          },
          "content": "Start the PostgreSQL service"
        }
      ],
      "title": "Start PostgreSQL",
      "summary": "The first thing to do is start the database service so you can log in and pla...",
      "content": "The first thing to do is start the database service so you can log in and play around with it. Your virtual machine comes with PostgreSQL (psql) installed. In order to start it, type this command into the terminal:\n\n```bash\nsudo service postgresql start\n```"
    },
    {
      "id": "L20",
      "steps": [
        {
          "id": "L20S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "5ad2ff6299071a242bdb08363c76ed280332ff3e"
            ]
          },
          "solution": {
            "commits": [
              "e44e1b965e7d85643bba213a0c5661dfa68cd5ea"
            ]
          },
          "content": "Log in to psql"
        }
      ],
      "title": "Login",
      "summary": "The psql service is now running. In order to interact with it, you need to lo...",
      "content": "The psql service is now running. In order to interact with it, you need to log in. Use this command to do so:\n\n```bash\nsudo -u postgres psql\n```\n\nThe `-u` stand for `username`. This will log you in as `postgres`."
    },
    {
      "id": "L30",
      "steps": [
        {
          "id": "L30S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "918f2ccbf9c86a5dbdb3e1162a3a18d925542132"
            ]
          },
          "solution": {
            "commits": [
              "ed09ca3b5cab54aab37cb3724c4936d6287fe3a9"
            ]
          },
          "content": "List the databases"
        }
      ],
      "title": "View Databases",
      "summary": "I noticed the prompt changed to `postgres=#`. That must mean you are connecte...",
      "content": "I noticed the prompt changed to `postgres=#`. That must mean you are connected to the service. First thing to do is see what databases are here.\n\nType `\\l` into the prompt to **l**ist them.\n\nIf you don't see the prompt at the bottom after listing, it means there wasn't enough room to display all the information. Press `Enter` until you see the prompt again."
    },
    {
      "id": "L40",
      "steps": [
        {
          "id": "L40S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "7d2639ca7e6815920003a3e205a0549b0e543d8f"
            ]
          },
          "solution": {
            "commits": [
              "607b6d34cb12f01f07dd9b244228e40d68bec7af"
            ]
          },
          "content": "Create `first_database`"
        }
      ],
      "title": "Create `first_database`",
      "summary": "The databases you see come with psql. You want to make your own. The command ...",
      "content": "The databases you see come with psql. You want to make your own. The command to create a new database is:\n\n```sql\nCREATE DATABASE database_name;\n```\n\nThe capitalized words are keywords telling psql what to do. The name of the database is the lowercase word. Note that **all commands need a semi-colon at the end.**\n\nCreate a new database named `first_database`."
    },
    {
      "id": "L50",
      "steps": [
        {
          "id": "L50S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "437a1f0a15b75aeb14dbff3293ad369d82dab2c3"
            ]
          },
          "solution": {
            "commits": [
              "5ad36d57918386cac7ef3727967907a100f0f83b"
            ]
          },
          "content": "View the databases"
        }
      ],
      "title": "View `first_database`",
      "summary": "Use the **l**ist command again to make sure your new database is there.",
      "content": "Use the **l**ist command again to make sure your new database is there.\n\nHints:\n* Enter the `\\l` command"
    },
    {
      "id": "L60",
      "steps": [
        {
          "id": "L60S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "e54453dad99d7e7468b84939cd52c938393042da"
            ]
          },
          "solution": {
            "commits": [
              "eae01147d739decf19bc936290b63af85af0f5fc"
            ]
          },
          "content": "Create `second_database`"
        }
      ],
      "title": "Create `second_database`",
      "summary": "It worked. If you don't get a message after entering a command, it means it's...",
      "content": "It worked. If you don't get a message after entering a command, it means it's incomplete and you likely forgot the semi-colon. You can just add it on the next line and press enter to finish the command.\n\nCreate another database named `second_database`.\n\nHints:\n* Here's the example again: `CREATE DATABASE database_name;`\n* Try entering `CREATE DATABASE second_database;`"
    },
    {
      "id": "L70",
      "steps": [
        {
          "id": "L70S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "326823bc5b1f4ad778e2011f5210120f9485541f"
            ]
          },
          "solution": {
            "commits": [
              "47611750ce2df1bd5c23f04e6430a00958064835"
            ]
          },
          "content": "View the databases"
        }
      ],
      "title": "View Databases",
      "summary": "You should have two new databases. Take another look at them to make sure.",
      "content": "You should have two new databases. Take another look at them to make sure.\n\nHints:\n* Use the **l**ist shortcut command\n* Try entering `\\l`"
    },
    {
      "id": "L80",
      "steps": [
        {
          "id": "L80S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "e0cd85ca30a3fa8f6a46af8bf3f6891f39b62df5"
            ]
          },
          "solution": {
            "commits": [
              "131773900b7a889af0560e5af44bf380922e607e"
            ]
          },
          "content": "Connect to `second_database`"
        }
      ],
      "title": "Connect to `second_database`",
      "summary": "You can **c**onnect to a database by entering `\\c database_name`. You need to...",
      "content": "You can **c**onnect to a database by entering `\\c database_name`. You need to connect to add information to it.\n\nConnect to your `second_database`.\n\nHints:\n* Enter `\\c second_database` to connect"
    },
    {
      "id": "L90",
      "steps": [
        {
          "id": "L90S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "fe253018d776e7b3852274e7c35d8afd3c3be36c"
            ]
          },
          "solution": {
            "commits": [
              "cea83317f9d28d7bfd4b132f5d125b40737c2a18"
            ]
          },
          "content": "View tables in `second_database`"
        }
      ],
      "title": "View `second_database` Tables",
      "summary": "You should see a message that you are connected. I noticed the prompt changed...",
      "content": "You should see a message that you are connected. I noticed the prompt changed to `second_database=#`. So the `postgres=#` prompt before must have meant that you were connected to that database.\n\nA database is made of tables that hold your data. You can enter `\\d` to **d**isplay the tables.\n\nTake a look at what tables are in this database.\n\nHints:\n* Try entering `\\d`"
    },
    {
      "id": "L100",
      "steps": [
        {
          "id": "L100S1",
          "setup": {
            "watchers": [
              "./coderoad/test/pg.log"
            ],
            "commits": [
              "a4145574d7530f5600ba6961b67d6182ca6b17e7"
            ]
          },
          "solution": {
            "commits": [
              "9f746bc13189f666c1b207a2584515136c5092cc"
            ]
          },
          "content": "Create a table named `first_table`"
        }
      ],
      "title": "Create `first_table`",
      "summary": "You can create a table similar to how you created a database. Instead of `CRE...",
      "content": "You can create a table similar to how you created a database. Instead of `CREATE DATABASE database_name;`, use `CREATE TABLE table_name();`. Note that the parenthesis are needed for this one.\n\nHints:\n* Don't forget the semi-colon\n* Try entering `CREATE TABLE first_table();`"
    }
  ]
}